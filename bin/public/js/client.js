// Generated by Haxe 3.4.4
(function () { "use strict";
var MainClient = function() {
	var _gthis = this;
	console.log("MainClient :: client.js");
	this.localStorage = js_Browser.getLocalStorage();
	$(window.document).ready(function() {
		console.log("client.js document ready!");
		_gthis.init();
	});
};
MainClient.main = function() {
	new MainClient();
};
MainClient.prototype = {
	init: function() {
		this.initDrag();
		this.initSockets();
	}
	,initDrag: function() {
		console.log("init drag");
		var holder = window.document.getElementById("drag-file");
		if(holder == null) {
			return;
		}
		holder.ondragover = function() {
			return false;
		};
		holder.ondragleave = function() {
			return false;
		};
		holder.ondragend = function() {
			return false;
		};
		holder.ondrop = function(e) {
			e.preventDefault();
			console.log(e);
			console.log(e.dataTransfer);
			var tot = e.dataTransfer.files;
			console.log(tot);
			var _g = 0;
			var _g1 = e.dataTransfer.files;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				var file = i;
				console.log(file.name);
				var path = Reflect.getProperty(file,"path");
				if(path != null) {
					console.log(path);
				}
			}
			return false;
		};
	}
	,initSockets: function() {
		console.log("init sockets");
		var _socket = io.connect("http://localhost:3000");
		_socket.on("message",function(data) {
			window.console.info("message:" + JSON.stringify(data));
		});
		_socket.on("loading",function(data1) {
		});
	}
};
var Reflect = function() { };
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
var js_Browser = function() { };
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		return null;
	}
};
MainClient.main();
})();

//# sourceMappingURL=client.js.map