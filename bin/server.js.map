{
"version":3,
"file":"server.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/Main.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/MainServer.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/server/Controller.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/server/Router.hx","/usr/local/lib/haxe/lib/hxnodejs/4,0,9/src/sys/FileSystem.hx"],
"sourcesContent":["package ;\n\n/**\n * @author Matthijs Kamstra aka [mck]\n */\nclass Main\n{\n\tstatic public function main()\n\t{\n\t\tvar main = new MainServer();\n\t}\n}","package;\n\nimport js.Node;\nimport js.node.Path;\n\nimport js.npm.Express;\nimport js.npm.express.*;\n\nimport server.Router;\n\nclass MainServer {\n\n\tpublic static inline var PORT = 3000;\n\n\tpublic static var io:js.npm.socketio.Server;\n\n\tpublic function new()\n\t{\n\t\ttrace('Node.js rest-api: open browser at http://localhost:${PORT}');\n\t\ttrace('Stop node.js : CTRL + c');\n\n\t\tvar app : Express   = new Express();\n\t\tvar server = js.node.Http.createServer( cast app );\n        io = new js.npm.socketio.Server(server);\n\n\t\t// all environments\n\t\tapp.set('port', PORT);\n\t\tapp.use(new Favicon(Node.__dirname + '/public/favicon.ico'));\n\t\tapp.use(new Morgan('dev'));\n\t\tapp.use(BodyParser.json()); \t\t\t\t\t\t\t// support json encoded bodies\n\t\tapp.use(BodyParser.urlencoded({ extended: true })); \t// support encoded bodies\n\t\tapp.use(new Static(Path.join(Node.__dirname, 'public')));\n\n\t\t// Routes\n\t\tRouter.init(app);\n\n\t\tapp.use(function(req, res, next) {\n\t\t\tres.status(404).send('404');\n\t\t\t// res.status(404).send(output);\n\t\t});\n\n\n\t\tio.on('connection', function (socket) {\n            socket.emit('message', { message: 'welcome to the chat' });\n            socket.on('send', function (data) {\n                io.sockets.emit('message', data);\n            });\n        });\n\n\n\t\tserver.listen(PORT);\n\n\t\t// app.listen(app.get('port'), function(){\n\t\t// \ttrace('Express server listening on port ' + app.get('port'));\n\t\t// });\n\n\n\t}\n\n\t// static public function main () {\n\t// \tnew MainServer ();\n\t// }\n}","package server;\n\nimport js.Node;\nimport js.node.Fs;\nimport js.npm.express.*;\n\nclass Controller {\n\n\tpublic static function index(req:Request,res:Response) {\n\t\tres.sendfile(Node.__dirname + '/public/index.html');\n\t}\n\n\tpublic static function test(req:Request,res:Response) {\n\t\tres.sendfile(Node.__dirname + '/public/test.html');\n\t}\n\n\tpublic static function latest(req:Request,res:Response) {\n\t\tvar _url = Node.__dirname +  '/_config/config.json';\n\t\tvar config = haxe.Json.stringify(\n\t\t\t{\"date\":Date.now()}\n\t\t);\n\t\tif(sys.FileSystem.exists(_url)){\n\t\t\tconfig = Fs.readFileSync(_url, \"utf8\");\n\t\t} else {\n\t\t\tif(!sys.FileSystem.exists(Node.__dirname + '/_config')) sys.FileSystem.createDirectory(Node.__dirname + '/_config');\n\t\t\tsys.io.File.saveContent( _url , config );\n\t\t}\n\t\tres.send(config);\n\t}\n\n}","package server;\n\nimport js.npm.Express;\n\nclass Router {\n\n\tpublic static function init(app : Express):Void\n\t{\n\t\tapp.get('/', Controller.index);\n\t\tapp.get('/test', Controller.test);\n\t\tapp.get('/latest', Controller.latest);\n\t\t// app.get('/update', Controller.update);\n\n\t}\n}","package sys;\n\nimport js.node.Fs;\nimport js.node.Path;\n\n@:dce\n@:coreApi\nclass FileSystem {\n\n\tpublic static function exists( path : String ) : Bool {\n\t\treturn try { Fs.accessSync(path); true; } catch (_:Dynamic) false;\n\t}\n\n\tpublic static inline function rename( path : String, newPath : String ) : Void {\n\t\tFs.renameSync(path, newPath);\n\t}\n\n\tpublic static inline function stat( path : String ) : sys.FileStat {\n\t\treturn cast Fs.statSync(path);\n\t}\n\n\tpublic static inline function fullPath( relPath : String ) : String {\n\t\treturn Fs.realpathSync(relPath);\n\t}\n\n\tpublic static inline function absolutePath( relPath : String ) : String {\n\t\treturn js.node.Path.resolve(relPath);\n\t}\n\n\tpublic static inline function isDirectory( path : String ) : Bool {\n\t\treturn Fs.statSync(path).isDirectory();\n\t}\n\n\tpublic static function createDirectory( path : String ) : Void {\n\t\ttry {\n\t\t\tFs.mkdirSync(path);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"ENOENT\") {\n\t\t\t\t// parent doesn't exist - create parent and then this dir\n\t\t\t\tcreateDirectory(Path.dirname(path));\n\t\t\t\tFs.mkdirSync(path);\n\t\t\t} else {\n\t\t\t\t// some other error - check if path is a dir, rethrow the error if not\n\t\t\t\t// (the `(e : js.Error)` cast is here to avoid HaxeError wrapping, though we need to investigate this in Haxe itself)\n\t\t\t\tvar stat = try Fs.statSync(path) catch (_:Dynamic) throw (e : js.Error);\n\t\t\t\tif (!stat.isDirectory()) throw (e : js.Error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static inline function deleteFile( path : String ) : Void {\n\t\tFs.unlinkSync(path);\n\t}\n\n\tpublic static inline function deleteDirectory( path : String ) : Void {\n\t\tFs.rmdirSync(path);\n\t}\n\n\tpublic static inline function readDirectory( path : String ) : Array<String> {\n\t\treturn Fs.readdirSync(path);\n\t}\n\n}\n"],
"names":[],
"mappings":";;;;YAOe,WAEb;AAAA,YAAW;;iBCOL,WACP;AAAA,CACC,YAAO,wDAAqD;CAC5D,YAAO;CAEP,UAAsB;CACtB,cAAa,0BAA2B,AAAK;CACvC,gBAAK,2BAA2B;CAGtC,QAAS,OAAO;CAChB,WAAQ,2BAAY,YAAkB;CACtC,WAAQ,0BAAY;CACpB,WAAQ;CACR,WAAQ,qCAAsB,aAAY;CAC1C,WAAQ,0BAAW,kBAAU,UAAiB;CAG9C,mBAAY;CAEZ,WAAQ,uBACP;AAAA,aAAW,UAAW;;CAKvB,iBAAO,aAAa,iBAAkB;AAAA,EAC5B,YAAa,UAAU,YAAY;EACnC,UAAW,OAAO,eACd;AAAA,8BAAiB,UAAU;;;CAKzC,eAAc;;;;;;;;;;;;;;0BC1CD,kBACb;AAAA,cAAa,YAAkB;;yBAGlB,kBACb;AAAA,cAAa,YAAkB;;2BAGlB,kBAA0C;AAAA,CACvD,WAAW,YAAmB;CAC9B,aAAa,eACZ,WAAQ;CAET,EAAG,uBAAsB,OACxB;AAAA,WAAS,wBAAgB,KAAM;QACzB;AAAA,EACN,EAAG,EAAC,sBAAsB,YAAkB,aAAY;AAAA,kCAA+B,YAAkB;;EACzG,yBAAyB,KAAO;;CAEjC,SAAS;;;qBCrBI,cACd;AAAA,CACC,QAAS,IAAI;CACb,QAAS,QAAQ;CACjB,QAAS,UAAU;;;wBCDN,eACN;AAAA,KAAI;AAAA,EAAE,sBAAc;EAAO;;EAA0B;;;iCAuB/C,eACb;AAAA,KACC;AAAA,uBAAa;;EAEb,EAAI,WAAU,UAAU;AAAA,GAEvB,+BAAgB,qBAAa;GAC7B,qBAAa;SACP;AAAA,GAGN;GAAW,IAAX;AAAA,WAAe,oBAAY;;IAAwB,MAAM,AAAC;;GAC1D,EAAI,EAAC,oBAAoB;AAAA,UAAM,AAAC;;;;;;;;"
}