{
"version":3,
"file":"main.js",
"sourceRoot":"file:///",
"sources":["/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/MainElectron.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/MainMenu.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/MainServer.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/server/Controller.hx","/Users/matthijs/Documents/workingdir/haxe/project-chromecast/src/server/Router.hx","/usr/local/lib/haxe/lib/hxnodejs/4,0,9/src/sys/FileSystem.hx"],
"sourcesContent":["\nimport electron.main.App;\nimport electron.main.BrowserWindow;\nimport electron.CrashReporter;\n\nimport js.Node;\nimport js.npm.Express;\n\nclass MainElectron {\n\n\t// var mainServer = new MainServer();\n\tpublic var mainWindow : BrowserWindow = null;\n\n\tpublic function new(){\n\n\t\tvar mainServer = new MainServer();\n\n\t\t// Report crashes to our server.\n\t\t// CrashReporter.start({\n\t\t// \tcompanyName : \"MatthijsKamstra\",\n\t\t// \tsubmitURL : \"https://github.com/MatthijsKamstra/project-chromecast/issues\"\n\t\t// });\n\n\t\t// Quit when all windows are closed.\n\t\tApp.on( 'window_all_closed', function(e) {\n\t\t\t// On OS X it is common for applications and their menu bar\n\t\t\t// to stay active until the user quits explicitly with Cmd + Q\n\t\t\tif (Node.process.platform != 'darwin')\n\t\t\t\tApp.quit();\n\t\t});\n\n\t\t// This method will be called when Electron has finished\n\t\t// initialization and is ready to create browser windows.\n\t\tApp.on( 'ready', function(e) {\n\n\t\t\t// Create the browser window.\n\t\t\tmainWindow = new BrowserWindow({width: 1024, height: 768});\n\n\t\t\t// Emitted when the window is closed.\n\t\t\tmainWindow.on( closed, function() {\n\t\t\t\tif( js.Node.process.platform != 'darwin' )\n\t\t\t\t\telectron.main.App.quit();\n\t\t\t\t// Dereference the window object, usually you would store windows\n\t\t\t\t// in an array if your app supports multi windows, this is the time\n\t\t\t\t// when you should delete the corresponding element.\n\t\t\t\tmainWindow = null;\n\t\t\t});\n\n\t\t\tnew MainMenu(this);\n\n\t\t\t// Open the DevTools.\n\t\t\tmainWindow.webContents.openDevTools();\n\n\t\t\tmainWindow.loadURL('http://localhost:3000');\n\n\t\t\t// mainWindow.loadURL( 'file://' + js.Node.__dirname + '/public/index.html' );\n\n\t\t});\n\t}\n\n\tstatic function main() {\n\t\tvar app = new MainElectron();\n\t}\n\n}\n","package;\n\nimport electron.main.BrowserWindow;\nimport electron.main.Menu;\nimport js.Node.process;\nimport js.Node.console;\nimport haxe.Constraints.Function;\n\nclass MainMenu {\n\n\tprivate var main : MainElectron;\n\n\tpublic function new (main:MainElectron) {\n\n\t\tthis.main = main;\n\n\t\tvar template : Array<MenuObj>  =\n\t\t[\n\t\t\t{\n\t\t\t\tlabel: 'Edit',\n\t\t\t\tsubmenu: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Undo',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+Z',\n\t\t\t\t\trole: Roles.undo\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Redo',\n\t\t\t\t\taccelerator: 'Shift+CmdOrCtrl+Z',\n\t\t\t\t\trole: Roles.redo\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Cut',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+X',\n\t\t\t\t\trole: Roles.cut\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Copy',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+C',\n\t\t\t\t\trole: Roles.copy\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Paste',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+V',\n\t\t\t\t\trole: Roles.paste\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Select All',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+A',\n\t\t\t\t\trole: Roles.selectall\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Search in File',\n\t\t\t\t\taccelerator: 'CmdOrCtrl+F',\n\t\t\t\t\tclick: function (){\n\t\t\t\t\t \tthis.main.mainWindow.webContents.send('toggleSearch');\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'View',\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{role: Roles.reload},\n\t\t\t\t\t{role: Roles.forcereload},\n\t\t\t\t\t{role: Roles.toggledevtools},\n\t\t\t\t\t{type: 'separator'},\n\t\t\t\t\t{role: Roles.resetzoom},\n\t\t\t\t\t{role: Roles.zoomin},\n\t\t\t\t\t{role: Roles.zoomout},\n\t\t\t\t\t{type: 'separator'},\n\t\t\t\t\t{role: Roles.togglefullscreen}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'window',\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{role: Roles.minimize},\n\t\t\t\t\t{role: Roles.close}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\trole: 'help',\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Learn More',\n\t\t\t\t\t\tclick: function (){\n\t\t\t\t\t\t\telectron.Shell.openExternal('http://fonk.amsterdam');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\tif (process.platform == 'darwin') {\n\t\t\ttemplate.unshift({\n\t\t\t\tlabel: electron.main.App.getName(),\n\t\t\t\tsubmenu: [\n\t\t\t\t\t{role: Roles.about},\n\t\t\t\t\t{type: 'separator'},\n\t\t\t\t\t{role: Roles.services},\n\t\t\t\t\t{type: 'separator'},\n\t\t\t\t\t{role: Roles.hide},\n\t\t\t\t\t{role: Roles.hideothers},\n\t\t\t\t\t{role: Roles.unhide},\n\t\t\t\t\t{type: 'separator'},\n\t\t\t\t\t{role: Roles.quit}\n\t\t\t\t]\n\t\t\t});\n\t\t};\n\n\t\tvar menu = Menu.buildFromTemplate(template);\n\t\tMenu.setApplicationMenu(menu);\n\t}\n\n}\n\n// https://github.com/electron/electron/blob/master/docs/api/menu-item.md\ntypedef MenuObj = {\n\t// click Function (optional) - Will be called with click(menuItem, browserWindow, event) when the menu item is clicked.\n\t// menuItem MenuItem\n\t// browserWindow BrowserWindow\n\t// event Event\n\t@:optional var role : String; // (optional) - Define the action of the menu item, when specified the click property will be ignored. See roles.\n\t@:optional var type : String; // (optional) - Can be normal, separator, submenu, checkbox or radio.\n\t@:optional var label : String; // - (optional)\n\t@:optional var sublabel : String; // - (optional)\n\t// @:optional var accelerator : Accelerator; // (optional)\n\t@:optional var icon : String; //(; //NativeImage | String) (optional)\n\t@:optional var enabled : Bool; // (optional) - If false, the menu item will be greyed out and unclickable.\n\t@:optional var visible : Bool; // (optional) - If false, the menu item will be entirely hidden.\n\t@:optional var checked : Bool; // (optional) - Should only be specified for checkbox or radio type menu items.\n\t@:optional var submenu : Array<SubMenuObj>; //(; //MenuItemConstructorOptions[] | Menu) (optional) - Should be specified for submenu type menu items. If submenu is specified, the type: 'submenu' can be omitted. If the value is not a Menu then it will be automatically converted to one using Menu.buildFromTemplate.\n\t@:optional var id : String; // (optional) - Unique within a single menu. If defined then it can be used as a reference to this item by the position attribute.\n\t@:optional var position : String; // (optional) - This field allows fine-grained definition of the specific location within a given menu.\n\n};\n\ntypedef SubMenuObj = {\n\t// [mck] not sure this works\n\t@:optional var click:Function;\n\n\t@:optional var role:Roles; \t\t\t// 'selectall'\n\t@:optional var type:String; \t\t// 'separator',\n\t@:optional var label:String;\t\t// 'Select All',\n\t@:optional var accelerator:String;\t// 'CmdOrCtrl+A',\n\t@:optional var enabled : Bool; // (optional) - If false, the menu item will be greyed out and unclickable.\n\t@:optional var submenu : Array<SubMenuObj>; //(; //MenuItemConstructorOptions[] | Menu) (optional) - Should be specified for submenu type menu items. If submenu is specified, the type: 'submenu' can be omitted. If the value is not a Menu then it will be automatically converted to one using Menu.buildFromTemplate.\n\n};\n\n@:enum abstract Roles(String) {\n\n\t// not really a role\n\tvar separator = 'separator';\n\n\tvar undo = 'undo';\n\tvar redo = 'redo';\n\tvar cut = 'cut';\n\tvar copy = 'copy';\n\tvar paste = 'paste';\n\tvar pasteandmatchstyle = 'pasteandmatchstyle';\n\tvar selectall = 'selectall';\n\tvar delete = 'delete';\n\tvar minimize = 'minimize';\t\t\t\t\t\t// - Minimize current window\n\tvar close = 'close';\t\t\t\t\t\t\t// - Close current window\n\tvar quit = 'quit';\t\t\t\t\t\t\t\t//- Quit the application\n\tvar reload = 'reload';\t\t\t\t\t\t\t// - Reload the current window\n\tvar forcereload = 'forcereload';\t\t\t\t// - Reload the current window ignoring the cache.\n\tvar toggledevtools = 'toggledevtools';\t\t\t// - Toggle developer tools in the current window\n\tvar togglefullscreen = 'togglefullscreen';\t\t//- Toggle full screen mode on the current window\n\tvar resetzoom = 'resetzoom';\t\t\t\t\t// - Reset the focused page's zoom level to the original size\n\tvar zoomin = 'zoomin';\t\t\t\t\t\t\t// - Zoom in the focused page by 10%\n\tvar zoomout = 'zoomout';\t\t\t\t\t\t// - Zoom out the focused page by 10%\n\tvar editMenu = 'editMenu';\t\t\t\t\t\t// - Whole default \"Edit\" menu (Undo, Copy, etc.)\n\tvar windowMenu = 'windowMenu';\t\t\t\t\t// - Whole default \"Window\" menu (Minimize, Close, etc.)\n\n\t// The following additional roles are available on macOS:\n\n\tvar about = 'about';\t\t\t\t\t\t\t// - Map to the orderFrontStandardAboutPanel action\n\tvar hide = 'hide';\t\t\t\t\t\t\t\t// - Map to the hide action\n\tvar hideothers = 'hideothers';\t\t\t\t\t// - Map to the hideOtherApplications action\n\tvar unhide = 'unhide';\t\t\t\t\t\t\t// - Map to the unhideAllApplications action\n\tvar startspeaking = 'startspeaking';\t\t\t// - Map to the startSpeaking action\n\tvar stopspeaking = 'stopspeaking';\t\t\t\t// - Map to the stopSpeaking action\n\tvar front = 'front';\t\t\t\t\t\t\t// - Map to the arrangeInFront action\n\tvar zoom = 'zoom';\t\t\t\t\t\t\t\t// - Map to the performZoom action\n\tvar window = 'window';\t\t\t\t\t\t\t// - The submenu is a \"Window\" menu\n\tvar help = 'help';\t\t\t\t\t\t\t\t// - The submenu is a \"Help\" menu\n\tvar services = 'services';\t\t\t\t\t\t// - The submenu is a \"Services\" menu\n\n}","package;\n\nimport js.Node;\nimport js.node.Path;\n\nimport js.npm.Express;\nimport js.npm.express.*;\n\nimport server.Router;\n\nclass MainServer {\n\n\tpublic static inline var PORT = 3000;\n\n\tpublic static var io:js.npm.socketio.Server;\n\n\tpublic function new()\n\t{\n\t\ttrace('Node.js rest-api: open browser at http://localhost:${PORT}');\n\t\ttrace('Stop node.js : CTRL + c');\n\n\t\tvar app : Express   = new Express();\n\t\tvar server = js.node.Http.createServer( cast app );\n        io = new js.npm.socketio.Server(server);\n\n\t\t// all environments\n\t\tapp.set('port', PORT);\n\t\tapp.use(new Favicon(Node.__dirname + '/public/favicon.ico'));\n\t\tapp.use(new Morgan('dev'));\n\t\tapp.use(BodyParser.json()); \t\t\t\t\t\t\t// support json encoded bodies\n\t\tapp.use(BodyParser.urlencoded({ extended: true })); \t// support encoded bodies\n\t\tapp.use(new Static(Path.join(Node.__dirname, 'public')));\n\n\t\t// Routes\n\t\tRouter.init(app);\n\n\t\tapp.use(function(req, res, next) {\n\t\t\tres.status(404).send('404');\n\t\t\t// res.status(404).send(output);\n\t\t});\n\n\n\t\tio.on('connection', function (socket) {\n            socket.emit('message', { message: 'welcome to the chat' });\n            socket.on('send', function (data) {\n                io.sockets.emit('message', data);\n            });\n        });\n\n\n\t\tserver.listen(PORT);\n\n\t\t// app.listen(app.get('port'), function(){\n\t\t// \ttrace('Express server listening on port ' + app.get('port'));\n\t\t// });\n\n\n\t}\n\n\t// static public function main () {\n\t// \tnew MainServer ();\n\t// }\n}","package server;\n\nimport js.Node;\nimport js.node.Fs;\nimport js.npm.express.*;\n\nclass Controller {\n\n\tpublic static function index(req:Request,res:Response) {\n\t\tres.sendfile(Node.__dirname + '/public/index.html');\n\t}\n\n\tpublic static function test(req:Request,res:Response) {\n\t\tres.sendfile(Node.__dirname + '/public/test.html');\n\t}\n\n\tpublic static function latest(req:Request,res:Response) {\n\t\tvar _url = Node.__dirname +  '/_config/config.json';\n\t\tvar config = haxe.Json.stringify(\n\t\t\t{\"date\":Date.now()}\n\t\t);\n\t\tif(sys.FileSystem.exists(_url)){\n\t\t\tconfig = Fs.readFileSync(_url, \"utf8\");\n\t\t} else {\n\t\t\tif(!sys.FileSystem.exists(Node.__dirname + '/_config')) sys.FileSystem.createDirectory(Node.__dirname + '/_config');\n\t\t\tsys.io.File.saveContent( _url , config );\n\t\t}\n\t\tres.send(config);\n\t}\n\n}","package server;\n\nimport js.npm.Express;\n\nclass Router {\n\n\tpublic static function init(app : Express):Void\n\t{\n\t\tapp.get('/', Controller.index);\n\t\tapp.get('/test', Controller.test);\n\t\tapp.get('/latest', Controller.latest);\n\t\t// app.get('/update', Controller.update);\n\n\t}\n}","package sys;\n\nimport js.node.Fs;\nimport js.node.Path;\n\n@:dce\n@:coreApi\nclass FileSystem {\n\n\tpublic static function exists( path : String ) : Bool {\n\t\treturn try { Fs.accessSync(path); true; } catch (_:Dynamic) false;\n\t}\n\n\tpublic static inline function rename( path : String, newPath : String ) : Void {\n\t\tFs.renameSync(path, newPath);\n\t}\n\n\tpublic static inline function stat( path : String ) : sys.FileStat {\n\t\treturn cast Fs.statSync(path);\n\t}\n\n\tpublic static inline function fullPath( relPath : String ) : String {\n\t\treturn Fs.realpathSync(relPath);\n\t}\n\n\tpublic static inline function absolutePath( relPath : String ) : String {\n\t\treturn js.node.Path.resolve(relPath);\n\t}\n\n\tpublic static inline function isDirectory( path : String ) : Bool {\n\t\treturn Fs.statSync(path).isDirectory();\n\t}\n\n\tpublic static function createDirectory( path : String ) : Void {\n\t\ttry {\n\t\t\tFs.mkdirSync(path);\n\t\t} catch (e:Dynamic) {\n\t\t\tif (e.code == \"ENOENT\") {\n\t\t\t\t// parent doesn't exist - create parent and then this dir\n\t\t\t\tcreateDirectory(Path.dirname(path));\n\t\t\t\tFs.mkdirSync(path);\n\t\t\t} else {\n\t\t\t\t// some other error - check if path is a dir, rethrow the error if not\n\t\t\t\t// (the `(e : js.Error)` cast is here to avoid HaxeError wrapping, though we need to investigate this in Haxe itself)\n\t\t\t\tvar stat = try Fs.statSync(path) catch (_:Dynamic) throw (e : js.Error);\n\t\t\t\tif (!stat.isDirectory()) throw (e : js.Error);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static inline function deleteFile( path : String ) : Void {\n\t\tFs.unlinkSync(path);\n\t}\n\n\tpublic static inline function deleteDirectory( path : String ) : Void {\n\t\tFs.rmdirSync(path);\n\t}\n\n\tpublic static inline function readDirectory( path : String ) : Array<String> {\n\t\treturn Fs.readdirSync(path);\n\t}\n\n}\n"],
"names":[],
"mappings":";;;mBAaQ,WALR;AAAA,CAGyC,AAHzC,kBAGyC;CAEjC;CAEN,iBAAiB;CASjB,qBAAS,oBAAoB,YAG5B;AAAA,IAAI,qBAA0B,UAC7B;AAAA;;;CAKF,qBAAS,QAAQ,aAAY;AAAA,EAG5B,oBAAa,gCAAkB,UAAQ,eAAc;EAGrD,qBAAe,SAAQ,WAAW;AAAA,GACjC,EAAI,qBAA6B,UAChC;AAAA;;GAID,oBAAa;;EAGd,aAAa;EAGb;EAEA,0BAAoB;;;oBAOf,WACN;AAAA,WAAU;;eCjDJ,eAAiC;AAAA,CAAjC;CAEN,YAAY;CAEZ,eACA,CACC,UACS,kBACC,CACT,UACS,sBACM,sBACR,QAEP,UACS,sBACM,4BACR,QAEP,UACS,qBACM,sBACR,OAEP,UACS,sBACM,sBACR,QAEP,UACS,uBACM,sBACR,SAEP,UACS,4BACM,sBACR,aAEP,UACS,gCACM,uBACP,WACL;AAAA,0CAAuC;MAI3C,UACS,kBACC,CACR,SAAO,UACP,SAAO,eACP,SAAO,kBACP,SAAQ,aACR,SAAO,aACP,SAAO,UACP,SAAO,WACP,SAAQ,aACR,SAAO,sBAGT,SACQ,oBACE,CACR,SAAO,YACP,SAAO,WAGT,SACQ,kBACE,CACR,UACS,sBACD,WACN;AAAA,8BAA6B;;CAOlC,EAAI,qBAAqB,UACxB;AAAA,mBAAiB,UACT,uCACE,CACR,SAAO,SACP,SAAQ,aACR,SAAO,YACP,SAAQ,aACR,SAAO,QACP,SAAO,cACP,SAAO,UACP,SAAQ,aACR,SAAO;;CAKV,WAAW,qCAAuB;CAClC,sCAAwB;;iBC/FlB,WACP;AAAA,CACC,YAAO,wDAAqD;CAC5D,YAAO;CAEP,UAAsB;CACtB,cAAa,0BAA2B,AAAK;CACvC,gBAAK,2BAA2B;CAGtC,QAAS,OAAO;CAChB,WAAQ,2BAAY,YAAkB;CACtC,WAAQ,0BAAY;CACpB,WAAQ;CACR,WAAQ,qCAAsB,aAAY;CAC1C,WAAQ,0BAAW,kBAAU,UAAiB;CAG9C,mBAAY;CAEZ,WAAQ,uBACP;AAAA,aAAW,UAAW;;CAKvB,iBAAO,aAAa,iBAAkB;AAAA,EAC5B,YAAa,UAAU,YAAY;EACnC,UAAW,OAAO,eACd;AAAA,8BAAiB,UAAU;;;CAKzC,eAAc;;;;;;;;;;;;;;;;;;0BC1CD,kBACb;AAAA,cAAa,YAAkB;;yBAGlB,kBACb;AAAA,cAAa,YAAkB;;2BAGlB,kBAA0C;AAAA,CACvD,WAAW,YAAmB;CAC9B,aAAa,eACZ,WAAQ;CAET,EAAG,uBAAsB,OACxB;AAAA,WAAS,wBAAgB,KAAM;QACzB;AAAA,EACN,EAAG,EAAC,sBAAsB,YAAkB,aAAY;AAAA,kCAA+B,YAAkB;;EACzG,yBAAyB,KAAO;;CAEjC,SAAS;;;qBCrBI,cACd;AAAA,CACC,QAAS,IAAI;CACb,QAAS,QAAQ;CACjB,QAAS,UAAU;;;wBCDN,eACN;AAAA,KAAI;AAAA,EAAE,sBAAc;EAAO;;EAA0B;;;iCAuB/C,eACb;AAAA,KACC;AAAA,uBAAa;;EAEb,EAAI,WAAU,UAAU;AAAA,GAEvB,+BAAgB,qBAAa;GAC7B,qBAAa;SACP;AAAA,GAGN;GAAW,IAAX;AAAA,WAAe,oBAAY;;IAAwB,MAAM,AAAC;;GAC1D,EAAI,EAAC,oBAAoB;AAAA,UAAM,AAAC;;;;;;;;"
}