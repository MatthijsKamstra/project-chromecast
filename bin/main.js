// Generated by Haxe 3.4.4
if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function () { "use strict";
var MainElectron = function() {
	this.mainWindow = null;
	var _gthis = this;
	var mainServer = new MainServer();
	electron_main_App.on("window_all_closed",function(e) {
		if(process.platform != "darwin") {
			electron_main_App.quit();
		}
	});
	electron_main_App.on("ready",function(e1) {
		_gthis.mainWindow = new electron_main_BrowserWindow({ width : 1024, height : 768});
		_gthis.mainWindow.on("closed",function() {
			if(process.platform != "darwin") {
				electron_main_App.quit();
			}
			_gthis.mainWindow = null;
		});
		new MainMenu(_gthis);
		_gthis.mainWindow.webContents.openDevTools();
		_gthis.mainWindow.loadURL("http://localhost:3000");
	});
};
MainElectron.main = function() {
	var app = new MainElectron();
};
var MainMenu = function(main) {
	var _gthis = this;
	this.main = main;
	var template = [{ label : "Edit", submenu : [{ label : "Undo", accelerator : "CmdOrCtrl+Z", role : "undo"},{ label : "Redo", accelerator : "Shift+CmdOrCtrl+Z", role : "redo"},{ label : "Cut", accelerator : "CmdOrCtrl+X", role : "cut"},{ label : "Copy", accelerator : "CmdOrCtrl+C", role : "copy"},{ label : "Paste", accelerator : "CmdOrCtrl+V", role : "paste"},{ label : "Select All", accelerator : "CmdOrCtrl+A", role : "selectall"},{ label : "Search in File", accelerator : "CmdOrCtrl+F", click : function() {
		_gthis.main.mainWindow.webContents.send("toggleSearch");
	}}]},{ label : "View", submenu : [{ role : "reload"},{ role : "forcereload"},{ role : "toggledevtools"},{ type : "separator"},{ role : "resetzoom"},{ role : "zoomin"},{ role : "zoomout"},{ type : "separator"},{ role : "togglefullscreen"}]},{ role : "window", submenu : [{ role : "minimize"},{ role : "close"}]},{ role : "help", submenu : [{ label : "Learn More", click : function() {
		electron_Shell.openExternal("http://fonk.amsterdam");
	}}]}];
	if(process.platform == "darwin") {
		template.unshift({ label : electron_main_App.getName(), submenu : [{ role : "about"},{ type : "separator"},{ role : "services"},{ type : "separator"},{ role : "hide"},{ role : "hideothers"},{ role : "unhide"},{ type : "separator"},{ role : "quit"}]});
	}
	var menu = electron_main_Menu.buildFromTemplate(template);
	electron_main_Menu.setApplicationMenu(menu);
};
var MainServer = function() {
	console.log("Node.js rest-api: open browser at http://localhost:" + 3000);
	console.log("Stop node.js : CTRL + c");
	var app = new js_npm_Express();
	var server1 = js_node_Http.createServer(app);
	MainServer.io = new js_npm_socketio_Server(server1);
	app.set("port",3000);
	app["use"](new js_npm_express_Favicon(__dirname + "/public/favicon.ico"));
	app["use"](new js_npm_express_Morgan("dev"));
	app["use"](js_npm_express_BodyParser.json());
	app["use"](js_npm_express_BodyParser.urlencoded({ extended : true}));
	app["use"](new js_npm_express_Static(js_node_Path.join(__dirname,"public")));
	server_Router.init(app);
	app["use"](function(req,res,next) {
		res.status(404).send("404");
	});
	MainServer.io.on("connection",function(socket) {
		socket.emit("message",{ message : "welcome to the chat"});
		socket.on("send",function(data) {
			MainServer.io.sockets.emit("message",data);
		});
	});
	server1.listen(3000);
};
var electron_Shell = require("electron").shell;
var electron_main_App = require("electron").app;
var electron_main_BrowserWindow = require("electron").BrowserWindow;
var electron_main_Menu = require("electron").Menu;
var haxe_io_Bytes = function() { };
var js_node_Fs = require("fs");
var js_node_Http = require("http");
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_npm_Express = require("express");
var js_npm_express_BodyParser = require("body-parser");
var js_npm_express_Favicon = require("serve-favicon");
var js_npm_express_Morgan = require("morgan");
var js_npm_express_Static = require("express").static;
var js_npm_socketio_Server = require("socket.io");
var server_Controller = function() { };
server_Controller.index = function(req,res) {
	res.sendfile(__dirname + "/public/index.html");
};
server_Controller.test = function(req,res) {
	res.sendfile(__dirname + "/public/test.html");
};
server_Controller.latest = function(req,res) {
	var _url = __dirname + "/_config/config.json";
	var config = JSON.stringify({ "date" : new Date()});
	if(sys_FileSystem.exists(_url)) {
		config = js_node_Fs.readFileSync(_url,"utf8");
	} else {
		if(!sys_FileSystem.exists(__dirname + "/_config")) {
			sys_FileSystem.createDirectory(__dirname + "/_config");
		}
		js_node_Fs.writeFileSync(_url,config);
	}
	res.send(config);
};
var server_Router = function() { };
server_Router.init = function(app) {
	app.get("/",server_Controller.index);
	app.get("/test",server_Controller.test);
	app.get("/latest",server_Controller.latest);
};
var sys_FileSystem = function() { };
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( e ) {
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _ ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
MainElectron.main();
})();

//# sourceMappingURL=main.js.map